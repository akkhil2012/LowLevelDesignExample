1) Content Delivery Network (CDN): https://lnkd.in/gjJrEJeH

2) Caching: https://lnkd.in/gC9piQbJ

3) Distributed Caching: https://lnkd.in/g7WKydNg

4) Latency vs Throughput: https://lnkd.in/g_amhAtN

5) CAP Theorem: https://lnkd.in/g3hmVamx

6) Load Balancing: https://lnkd.in/gQaa8sXK

7) ACID Transactions: https://lnkd.in/gMe2JqaF

8) SQL vs NoSQL: https://lnkd.in/g3WC_yxn

9) Consistent Hashing: https://lnkd.in/gd3eAQKA

10) Database Index: https://lnkd.in/gCeshYVt

11) Rate Limiting: https://lnkd.in/gWsTDR3m

12) Microservices Architecture: https://lnkd.in/gFXUrz_T

13) Strong vs Eventual Consistency: https://lnkd.in/gJ-uXQXZ

14) REST vs RPC: https://lnkd.in/gN__zcAB

15) Batch Processing vs. Stream Processing: https://lnkd.in/g4_MzM4s

16) HeartBeat: https://lnkd.in/g4x7sMrF

17) Circuit Breaker: https://lnkd.in/gCxyFzKm

18) Idempotency: https://lnkd.in/gPm6EtKJ

19) Database Scaling: https://lnkd.in/gAXpSyWQ

20) Data Replication: https://lnkd.in/gVAJxTpS

21) Data Redundancy: https://lnkd.in/gNN7TF7n

22) Database Sharding: https://lnkd.in/gMqqc6x9

23) Proxy Server: https://lnkd.in/gi8KnKS6

24) Domain Name System (DNS): https://lnkd.in/gkMcZW8V

25) Message Queues: https://lnkd.in/gTzY6uk8

26) WebSockets: https://lnkd.in/g76Gv2KQ

27) Consensus Algorithms: https://lnkd.in/ggc3tFbr

28) Fault Tolerance: https://lnkd.in/dVJ6n3wA

29) Failover: https://lnkd.in/dihZ-cEG

30) Gossip Protocol: https://lnkd.in/gfPMtrJZ

31) API Gateway: https://lnkd.in/gnsJGJaM

32) Distributed Locking: https://lnkd.in/gRxNJwWE

33) Distributed Tracing: https://lnkd.in/d6r5RdXG

34) Bloom Filters: https://lnkd.in/dt4QbSUz

35) Checksum: https://lnkd.in/ghNc5pfn

36) API Design: https://lnkd.in/ghYzrr8q

37) Serverless Architecture: https://lnkd.in/gQNAXKkb

38) Concurrency vs Parallelism: https://lnkd.in/gSKUm2Nh

39) Disaster Recovery: https://lnkd.in/g8rnr3V3

40) Service Discovery: https://lnkd.in/gjnrYkyF



>>>>>>>

https://github.com/Salah856/System-Design/blob/main/Design%20Rate%20Limiter.md

https://github.com/arkapg211002/System-Design-Preparation

>>
https://excalidraw.com/

https://www.youtube.com/watch?v=POfW0UULcyA

=======

Alex Xu
=======
  - REVISE ALEX XU

0. Whatsapp


https://www.youtube.com/@SDFC
1. Design tagging system
https://leetcode.com/discuss/interview-question/system-design/838025/Design-a-tagging-system-like-tags-used-in-stack-overflow

https://justpaste.it/b26kl


2. https://www.youtube.com/watch?v=POfW0UULcyA
Google calendar


>>> Payment gateway?????????????


\\2. To do:
Design Social Media Comments, Likes, Follow


3.https://leetcode.com/discuss/interview-experience/4390713/Salesforce-or-LMTS/

4.
Design a data model for News Feed system and how can we optimise get feed API response time


5.
Design a URL shortening service with multiple requirements from different internal teams

6.
Design rule engine for banking system; like if salary is X and account is 10 years old; user should be given Z % discount.

7.
https://liuzhenglaichn.gitbook.io/system-design/news-feed/design-a-news-feed-system



8.
Job scheduler:
Prefer this: https://leetcode.com/discuss/general-discussion/1082786/System-Design%3A-Designing-a-distributed-Job-Scheduler-or-Many-interesting-concepts-to-learn

https://www.youtube.com/watch?v=ta5x62cDxf4

https://dropbox.tech/infrastructure/asynchronous-task-scheduling-at-dropbox


3. Design stackOverflow:
Design stack overflow
Capability to ask questions, upvote/downvote. Capability to answer questions, support comments on the questions, upvote/downvote.
how to get questions and answer by paginated results. Answers sorted by no of upvotes/downvotes
concentrated on data model
how the questions are stored
how the answers are stored.




=====
2.


>>>>>>
3 hrs session:
https://www.youtube.com/watch?v=P_eh1b6vE-4


Sahil Gaba:
I failed so many System Design interviews until I found these 10 articles.

1. URL shortener or TinyURL: https://lnkd.in/gJPWZsX3

2. Social media app like Twitter: https://lnkd.in/guParNhY

3. File sharing service like Dropbox: https://lnkd.in/gnSQ6rAd

4. Video streaming service like Netflix: https://lnkd.in/gnHSyCj8

5. Autocomplete feature of Google: https://lnkd.in/g3VFcaYN

6. Messaging app like WhatsApp: https://lnkd.in/g5zJa_4W

7. Online document editor like Google docs: https://lnkd.in/gBvztEqV

8. Proximity service like Uber: https://lnkd.in/grtPbr6k

9. Hotel booking service like Airbnb: https://lnkd.in/gWjrGwCM

10. Web crawler: https://lnkd.in/gTkfCH8U



>>>>>>
https://github.com/karanpratapsingh/system-design#netflix

========

Netflix:
======
https://lnkd.in/gnHSyCj8






WhatApp:
======
 WhatsApp primarily uses end-to-end encryption for its messages and does not use WebSocket connections directly for real-time communication. Instead, it uses a combination of various technologies and protocols to provide a secure and efficient messaging service



